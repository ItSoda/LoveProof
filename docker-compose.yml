version: "3.8"

networks:
  loveproof:
    external: true
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450

services:
  postgresql:
    image: postgres
    restart: always
    container_name: ${POSTGRESQL_HOST}
    env_file:
      - ${ENV_FILE}
    environment:
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
      POSTGRES_USER: ${POSTGRESQL_ROOT_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_ROOT_PASSWORD}
      POSTGRES_MAX_CONNECTIONS: 1
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - loveproof

  api:
    build: ./loveproof-backend
    image: loveproof-api:latest
    container_name: django-api
    command:
      - sh
      - -c
      - |
        dockerize -wait tcp://postgresql:5432 -timeout 300s &&
        poetry run python manage.py collectstatic --noinput &&
        poetry run python manage.py migrate --skip-checks &&
        poetry run uvicorn LoveProof.asgi:application  --port 8000 --host 0.0.0.0 --workers 24
    env_file:
      - ${ENV_FILE}
    environment:
      - DOCKER_CONTAINER=True
    depends_on:
      - postgresql
      - redis
      - kafka
    volumes:
      - ./loveproof-backend:/loveproof
      - static_volume:/loveproof/static
      - media_volume:/loveproof/media
    networks:
      - loveproof

  frontend:
    build:
      context: ./loveproof-frontend
      dockerfile: Dockerfile
    volumes:
      - react_build:/app/dist
      - static_volume:/blakkk/static
      - media_volume:/blakkk/media
    depends_on:
      - api
    container_name: frontend
    networks:
      - loveproof

  nginx:
    image: nginx:latest
    ports:
      - 443:443
      - 80:80
    restart: always
    depends_on:
      - frontend
      - api
    volumes:
       - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
       - ./nginx/ssl:/ssl
       - static_volume:/blakkk/static
       - media_volume:/blakkk/media
       - react_build:/app/dist
    container_name: main-nginx
    networks:
      - loveproof
    
volumes:
  db-data: null
  static_volume:
  media_volume:
  react_build: null
  matomo:
  mysql_matomo:
